CREATE KEYSPACE IF NOT EXISTS BUPT_IOT
WITH replication = {
	'class' : 'SimpleStrategy',
	'replication_factor' : 1
};

CREATE TABLE IF NOT EXISTS BUPT_IOT.device (
    id timeuuid,
    tenant_id int,
    customer_id int,
    name text,
    search_text text,
    manufacture text,
    model text,
    device_type text,
    parent_device_id text,
    status text,
    additional_info text,
	location text,
    PRIMARY KEY (id, tenant_id, customer_id)
);

CREATE MATERIALIZED VIEW IF NOT EXISTS BUPT_IOT.device_by_tenant_and_parent_device_id AS
    SELECT *
    from BUPT_IOT.device
    WHERE tenant_id IS NOT NULL AND customer_id IS NOT NULL AND parent_device_id IS NOT NULL AND id IS NOT NULL
    PRIMARY KEY ( parent_device_id, tenant_id, id, customer_id)
    WITH CLUSTERING ORDER BY ( parent_device_id ASC, id DESC, customer_id DESC);

CREATE MATERIALIZED VIEW IF NOT EXISTS BUPT_IOT.device_by_tenant_and_name AS
    SELECT *
    from BUPT_IOT.device
    WHERE tenant_id IS NOT NULL AND customer_id IS NOT NULL AND name IS NOT NULL AND id IS NOT NULL
    PRIMARY KEY ( tenant_id, name, id, customer_id)
    WITH CLUSTERING ORDER BY ( name ASC, id DESC, customer_id DESC);

CREATE MATERIALIZED VIEW IF NOT EXISTS BUPT_IOT.device_by_tenant_and_search_text AS
    SELECT *
    from BUPT_IOT.device
    WHERE tenant_id IS NOT NULL AND customer_id IS NOT NULL AND search_text IS NOT NULL AND id IS NOT NULL
    PRIMARY KEY ( tenant_id, search_text, id, customer_id)
    WITH CLUSTERING ORDER BY ( search_text ASC, id DESC, customer_id DESC);

CREATE MATERIALIZED VIEW IF NOT EXISTS BUPT_IOT.device_by_customer_and_search_text AS
    SELECT *
    from BUPT_IOT.device
    WHERE tenant_id IS NOT NULL AND customer_id IS NOT NULL AND search_text IS NOT NULL AND id IS NOT NULL
    PRIMARY KEY ( customer_id, tenant_id, search_text, id )
    WITH CLUSTERING ORDER BY ( tenant_id DESC, search_text ASC, id DESC );

CREATE TABLE IF NOT EXISTS bupt_iot.device_credentials (
	id timeuuid PRIMARY KEY,
	device_id timeuuid,
	device_token text
);

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.device_credentials_by_device AS
	SELECT *
	from  bupt_iot.device_credentials
	WHERE device_id IS NOT NULL AND id IS NOT NULL
	PRIMARY KEY ( device_id, id );

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.device_credentials_by_device_token AS
	SELECT *
	from bupt_iot.device_credentials
	WHERE device_token IS NOT NULL AND id IS NOT NULL
	PRIMARY KEY ( device_token, id );

CREATE TABLE IF NOT EXISTS bupt_iot.group (
    id timeuuid,
    tenant_id int,
    customer_id int,
    name text,
    search_text text,
    PRIMARY KEY (id, tenant_id, customer_id)
);

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.group_by_tenant_and_search_text AS
	SELECT *
	from bupt_iot.group
	WHERE tenant_id IS NOT NULL AND search_text IS NOT NULL AND id IS NOT NULL AND customer_id IS NOT NULL
	PRIMARY KEY ( tenant_id, search_text, id ,customer_id)
	WITH CLUSTERING ORDER BY ( search_text ASC, id DESC );

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.group_by_customer_and_search_text AS
	SELECT *
	from bupt_iot.group
	WHERE customer_id IS NOT NULL AND search_text IS NOT NULL AND id IS NOT NULL AND tenant_id IS NOT NULL
	PRIMARY KEY ( customer_id, search_text, tenant_id, id )
	WITH CLUSTERING ORDER BY ( search_text ASC, id DESC );

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.group_by_customer_and_name AS
    SELECT *
    from bupt_iot.group
    WHERE customer_id IS NOT NULL AND name IS NOT NULL AND id IS NOT NULL AND tenant_id IS NOT NULL
    PRIMARY KEY ( customer_id, name, tenant_id, id )
    WITH CLUSTERING ORDER BY ( name ASC, id DESC, customer_id DESC);

CREATE TABLE IF NOT EXISTS bupt_iot.device_by_group_id (
    device_id timeuuid,
    group_id timeuuid,
    PRIMARY KEY (group_id, device_id)
);

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.group_by_device_id AS
    SELECT *
    from bupt_iot.device_by_group_id
    WHERE group_id IS NOT NULL AND device_id IS NOT NULL
    PRIMARY KEY ( device_id, group_id)
    WITH CLUSTERING ORDER BY ( device_id ASC, group DESC );

CREATE MATERIALIZED VIEW IF NOT EXISTS bupt_iot.group_by_device_id AS
    SELECT *
    from bupt_iot.device_by_group_id
    WHERE group_id IS NOT NULL AND device_id IS NOT NULL
    PRIMARY KEY ( device_id, group_id)
    WITH CLUSTERING ORDER BY ( device_id ASC, group DESC );

	CREATE TABLE IF NOT EXISTS BUPT_IOT.ts_kv_cf (
    entity_id timeuuid,
    key text,
    partition bigint,
    ts bigint,
    bool_v boolean,
    str_v text,
    long_v bigint,
    dbl_v double,
    PRIMARY KEY (( entity_id, key, partition ), ts)
);

CREATE TABLE IF NOT EXISTS BUPT_IOT.ts_kv_partitions_cf (
    entity_id timeuuid,
    key text,
    partition bigint,
    PRIMARY KEY (( entity_id, key ), partition)
) WITH CLUSTERING ORDER BY ( partition ASC )
  AND compaction = { 'class' :  'LeveledCompactionStrategy'  };

CREATE TABLE IF NOT EXISTS BUPT_IOT.ts_kv_latest_cf (
    entity_id timeuuid,
    key text,
    ts bigint,
    bool_v boolean,
    str_v text,
    long_v bigint,
    dbl_v double,
    PRIMARY KEY (entity_id , key)
) WITH compaction = { 'class' :  'LeveledCompactionStrategy'  };
